(()=>{"use strict";var e,t,r,n={2054:(e,t,r)=>{var n=r(7294),c=r(3935),a=r(436),o=r(1859),i=r(5974),p=r(2445),f=r(6922);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var l=r(4942),d=r(8152),u=r(7036),s=r(1169);const g=(0,s.ZL)()((function(e){return{root:{height:"100vh",display:"flex",flexDirection:"column"},row:{display:"flex"},col:{margin:5,border:"1px solid black"},dropzone:{background:u.Z[900],height:190,width:190,display:"grid",gap:5,gridAutoRows:"minmax(100px, auto)"},things:{display:"flex",flexWrap:"wrap","& div *":{height:100,width:100,margin:5}},thing:{width:"100%",height:"100%",minHeight:30,minWidth:30,fontWeight:700,backgroundSize:"cover",display:"flex",justifyContent:"center",alignItems:"center"}}}));var b=r(5614),m=(0,s.ZL)()((function(e,t){return{root:{cursor:t.isDragging?"grabbing !important":"grab"}}}));const v=function(e){var t=e.children,r=(e.type,e.id),c=(0,b.c)((function(){return{type:"Draggable",item:{id:r},collect:function(e){return{isDragging:!!e.isDragging()}}}})),a=(0,d.Z)(c,2),o=a[0].isDragging,i=a[1],p=m({isDragging:o}).classes;return n.createElement("div",{className:p.root,ref:i},t)};var h=r(2452),j=(0,s.ZL)()((function(e,t){return{root:{background:t.isOver?"red":"white"}}}));const y=function(e){var t=e.children,r=(e.accept,e.onDrop),c=(0,h.L)((function(){return{accept:"Draggable",collect:function(e){return{isOver:e.isOver(),canDrop:e.canDrop()}},drop:r}})),a=(0,d.Z)(c,2),o=a[0],i=o.canDrop,p=o.isOver,f=a[1],l=j({isOver:p,canDrop:i}).classes;return n.createElement("div",{className:l.root,ref:f,role:"Dustbin"},t)},O=(r.p,r.p,r.p,r.p,r.p,r.p,r.p,r.p,r.p,r.p+"9d6943fc4a576094b9262e711765daf7.jpg"),w=r.p+"de5464f5cf164c3316c9c1e3e547ff69.jpg",E=r.p+"67e7beee9c43c83fcd3eeb290cfe0f76.jpg",k=r.p+"9032bdf549184026e24e0ee96beec0e8.jpg",D=r.p+"c9aff2e2b61039ceae22e2c1cd882e3e.jpg",P=r.p+"2d63617eaabcc161c16e38be1d6d3cf8.jpg",x=r.p+"26a4eda57e2ea9503ef25858ddbfc31e.jpg",N=r.p+"e893ea1afe1a0087e5cd533a83f61034.jpg",S=r.p+"9d4c98c313307b55c31d399a8ab477af.jpg",Z=r.p+"042e5db811ebf8527fc53860fcc51b44.jpg",_=r.p+"b151dcde2fc25847d0b605ae578dbba6.jpg",M=r.p+"f597fe93b8275d4564ee786e12b55792.jpg",T=r.p+"6a244b7e8ff220de028a97740af4bba0.jpg",C=r.p+"064a9c50e7c383682f1ade70fe88503c.jpg",W=r.p+"d45abfc98352eff30976db4ec7007c39.jpg",L=r.p+"2d44aadbd88d2ee65191491c63245bcc.jpg",I=r.p+"20c797d00f028b6a22dc27fdbe35f1f4.jpg",$=r.p+"6980f8df528c27297e4e104dda53f3a0.jpg",z=r.p+"0e5ffe42d0907c29dc97a767e19945a2.jpg",B=r.p+"9e448b681a9641ea9697cc9366742a26.jpg",q=r.p+"79db362582bcdefa25a130e2ac6a2c6e.jpg",A=r.p+"6e5d7c6f288f41933f93577cc8a9eae8.jpg",R=r.p+"f521dcc9c647cebfdde07ff543806b1a.jpg",F=r.p+"e14a0a38c8ec5c108282cb53fe74222a.jpg",G=r.p+"7609d8b3d49cd907cd45f75ed6ebadd3.jpg",H=r.p+"6593afbeda2e984e9a0531b1cf888445.jpg";function J(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function K(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?J(Object(r),!0).forEach((function(t){(0,l.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):J(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var Q=["Good","Neutral","Evil"],U=["Lawful","Neutral","Chaotic"],V=[O,w,E,k,D,P,x,N,S,Z,_,M,T,C,W,L,I,$,z,B,q,A,R,F,G,H];const X=function(){var e=g().classes,t=n.useState(V),r=(0,d.Z)(t,2),c=(r[0],r[1]),a=n.useState({}),o=(0,d.Z)(a,2),i=o[0],p=o[1],f=function(e,t){p((function(r){return K(K({},r),{},(0,l.Z)({},t.id,e))})),c((function(e){return e.filter((function(e){return e!==t.id}))}))};return n.createElement("div",{className:e.root},Q.map((function(t){return n.createElement("div",{key:t,className:e.row},U.map((function(r){var c=V.filter((function(e){return i[e]==="".concat(t).concat(r)}));return n.createElement(y,{key:"".concat(t).concat(r),onDrop:function(e,n){return f("".concat(t).concat(r),e)}},n.createElement("div",null,r," ",t),n.createElement("div",{className:e.col},n.createElement("div",{className:e.dropzone,style:{gridTemplateColumns:"repeat(".concat(Math.ceil(Math.sqrt(c.length)),", 1fr)"),gridTemplateRows:"repeat(".concat(Math.ceil(Math.sqrt(c.length)),", 1fr)")}},c.map((function(t){return n.createElement(v,{id:t,key:t},n.createElement("div",{className:e.thing,style:{backgroundImage:"url(".concat(t,")")}}))})))))})))})),n.createElement(y,{key:"pool",onDrop:function(e,t){return f(void 0,e)}},n.createElement("div",{className:e.things},V.filter((function(e){return!i[e]})).map((function(t){return n.createElement(v,{id:t,key:t},n.createElement("div",{className:e.thing,style:{backgroundImage:"url(".concat(t,")")}}))})))))},Y=(0,r(2161).Z)({});var ee=(0,o.default)({key:"mui",prepend:!0});c.render(n.createElement(a.C,{value:ee},n.createElement(i.Z,{theme:Y},n.createElement(f.W,{backend:p.PD},n.createElement(X,null)))),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},c={};function a(e){var t=c[e];if(void 0!==t)return t.exports;var r=c[e]={exports:{}};return n[e].call(r.exports,r,r.exports,a),r.exports}a.m=n,e=[],a.O=(t,r,n,c)=>{if(!r){var o=1/0;for(l=0;l<e.length;l++){for(var[r,n,c]=e[l],i=!0,p=0;p<r.length;p++)(!1&c||o>=c)&&Object.keys(a.O).every((e=>a.O[e](r[p])))?r.splice(p--,1):(i=!1,c<o&&(o=c));if(i){e.splice(l--,1);var f=n();void 0!==f&&(t=f)}}return t}c=c||0;for(var l=e.length;l>0&&e[l-1][2]>c;l--)e[l]=e[l-1];e[l]=[r,n,c]},a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},r=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,a.t=function(e,n){if(1&n&&(e=this(e)),8&n)return e;if("object"==typeof e&&e){if(4&n&&e.__esModule)return e;if(16&n&&"function"==typeof e.then)return e}var c=Object.create(null);a.r(c);var o={};t=t||[null,r({}),r([]),r(r)];for(var i=2&n&&e;"object"==typeof i&&!~t.indexOf(i);i=r(i))Object.getOwnPropertyNames(i).forEach((t=>o[t]=()=>e[t]));return o.default=()=>e,a.d(c,o),c},a.d=(e,t)=>{for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;a.g.importScripts&&(e=a.g.location+"");var t=a.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=e})(),(()=>{var e={179:0};a.O.j=t=>0===e[t];var t=(t,r)=>{var n,c,[o,i,p]=r,f=0;if(o.some((t=>0!==e[t]))){for(n in i)a.o(i,n)&&(a.m[n]=i[n]);if(p)var l=p(a)}for(t&&t(r);f<o.length;f++)c=o[f],a.o(e,c)&&e[c]&&e[c][0](),e[c]=0;return a.O(l)},r=self.webpackChunkapp=self.webpackChunkapp||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var o=a.O(void 0,[216],(()=>a(2054)));o=a.O(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,