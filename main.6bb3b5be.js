(()=>{"use strict";var e,t,r,n={2253:(e,t,r)=>{var n=r(7294),c=r(3935),a=r(436),o=r(1859),i=r(5974),l=r(2445),p=r(6922);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var f=r(4942),u=r(8152),d=r(7036),s=r(1169);const g=(0,s.ZL)()((function(e){return{root:{height:"100vh",display:"flex",flexDirection:"column"},row:{display:"flex"},col:{margin:5,border:"1px solid black"},dropzone:{background:d.Z[900],height:190,width:190,display:"grid",gap:5,gridAutoRows:"minmax(100px, auto)"},things:{display:"flex",flexWrap:"wrap","& div *":{height:100,width:100,margin:5}},thing:{width:"100%",height:"100%",minHeight:30,minWidth:30,fontWeight:700,backgroundSize:"cover",display:"flex",justifyContent:"center",alignItems:"center"}}}));var b=r(5614),m=(0,s.ZL)()((function(e,t){return{root:{cursor:t.isDragging?"grabbing !important":"grab"}}}));const v=function(e){var t=e.children,r=(e.type,e.id),c=(0,b.c)((function(){return{type:"Draggable",item:{id:r},collect:function(e){return{isDragging:!!e.isDragging()}}}})),a=(0,u.Z)(c,2),o=a[0].isDragging,i=a[1],l=m({isDragging:o}).classes;return n.createElement("div",{className:l.root,ref:i},t)};var h=r(2452),y=(0,s.ZL)()((function(e,t){return{root:{background:t.isOver?"red":"white"}}}));const j=function(e){var t=e.children,r=(e.accept,e.onDrop),c=(0,h.L)((function(){return{accept:"Draggable",collect:function(e){return{isOver:e.isOver(),canDrop:e.canDrop()}},drop:r}})),a=(0,u.Z)(c,2),o=a[0],i=o.canDrop,l=o.isOver,p=a[1],f=y({isOver:l,canDrop:i}).classes;return n.createElement("div",{className:f.root,ref:p,role:"Dustbin"},t)},O=r.p+"306f945d7e0ad2375bd0059bb5dbca6c.jpg",w=r.p+"f8a87a85753741983ce17386021527bb.jpg",E=r.p+"bf53cb9b3919914a7cc18f01b5d48f7b.jpg",k=r.p+"f1773ef6f4c765609fc359390d84cc56.jpg",D=r.p+"7613997f9d9c83425330e2be0726b436.jpg",P=r.p+"87bdef0a4cc6a331aab882687a31af0e.jpg",x=r.p+"a753891e8e1616712398861e78bd6f79.jpg",N=r.p+"1016255b63c089e78b69ab7a6223423a.jpg",S=r.p+"95ebea3e5fb6d8fa50caec03dfd4b2e3.jpg",Z=r.p+"19a13f9818c66e315b2b3b29e249518a.jpg",_=r.p+"c8658897ce3c58bbb2e6a69454e7f474.jpg",M=r.p+"2977f48f18ecd4a76147b3f7a2d88e13.jpg",T=r.p+"526d20d4307710e81b4afc394738f44a.jpg",C=r.p+"bc3c870c7839e2628cf63afbe7843452.jpg",W=r.p+"dc223ef73c57b9541dea15c6c1d17c07.jpg",L=r.p+"dc037894e6d6508ea66ae401ae81deea.jpg",I=r.p+"b0807fad85c148accd71796586d9481a.jpg",$=r.p+"b90e2d37b599375edaac30c21536e6f0.jpg",z=r.p+"b7629b6967821275732bbb3609e47dc1.jpg",B=r.p+"81bcf11ceb78f4facf99d898d979fd48.jpg",q=r.p+"cc7cd85c1c69c1b9b0c69d95d917cfd1.jpg",A=r.p+"d531526bfc689f865a344d10d99c4a06.jpg";function R(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function F(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?R(Object(r),!0).forEach((function(t){(0,f.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):R(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var G=["Good","Neutral","Evil"],H=["Lawful","Neutral","Chaotic"],J=[O,w,E,k,D,P,x,N,S,Z,_,M,T,C,W,L,I,$,z,B,q,A];const K=function(){var e=g().classes,t=n.useState(J),r=(0,u.Z)(t,2),c=(r[0],r[1]),a=n.useState({}),o=(0,u.Z)(a,2),i=o[0],l=o[1],p=function(e,t){l((function(r){return F(F({},r),{},(0,f.Z)({},t.id,e))})),c((function(e){return e.filter((function(e){return e!==t.id}))}))};return n.createElement("div",{className:e.root},G.map((function(t){return n.createElement("div",{key:t,className:e.row},H.map((function(r){var c=J.filter((function(e){return i[e]==="".concat(t).concat(r)}));return n.createElement(j,{key:"".concat(t).concat(r),onDrop:function(e,n){return p("".concat(t).concat(r),e)}},n.createElement("div",null,r," ",t),n.createElement("div",{className:e.col},n.createElement("div",{className:e.dropzone,style:{gridTemplateColumns:"repeat(".concat(Math.ceil(Math.sqrt(c.length)),", 1fr)"),gridTemplateRows:"repeat(".concat(Math.ceil(Math.sqrt(c.length)),", 1fr)")}},c.map((function(t){return n.createElement(v,{id:t,key:t},n.createElement("div",{className:e.thing,style:{backgroundImage:"url(".concat(t,")")}}))})))))})))})),n.createElement(j,{key:"pool",onDrop:function(e,t){return p(void 0,e)}},n.createElement("div",{className:e.things},J.filter((function(e){return!i[e]})).map((function(t){return n.createElement(v,{id:t,key:t},n.createElement("div",{className:e.thing,style:{backgroundImage:"url(".concat(t,")")}}))})))))},Q=(0,r(2161).Z)({});var U=(0,o.default)({key:"mui",prepend:!0});c.render(n.createElement(a.C,{value:U},n.createElement(i.Z,{theme:Q},n.createElement(p.W,{backend:l.PD},n.createElement(K,null)))),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},c={};function a(e){var t=c[e];if(void 0!==t)return t.exports;var r=c[e]={exports:{}};return n[e].call(r.exports,r,r.exports,a),r.exports}a.m=n,e=[],a.O=(t,r,n,c)=>{if(!r){var o=1/0;for(f=0;f<e.length;f++){for(var[r,n,c]=e[f],i=!0,l=0;l<r.length;l++)(!1&c||o>=c)&&Object.keys(a.O).every((e=>a.O[e](r[l])))?r.splice(l--,1):(i=!1,c<o&&(o=c));if(i){e.splice(f--,1);var p=n();void 0!==p&&(t=p)}}return t}c=c||0;for(var f=e.length;f>0&&e[f-1][2]>c;f--)e[f]=e[f-1];e[f]=[r,n,c]},a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},r=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,a.t=function(e,n){if(1&n&&(e=this(e)),8&n)return e;if("object"==typeof e&&e){if(4&n&&e.__esModule)return e;if(16&n&&"function"==typeof e.then)return e}var c=Object.create(null);a.r(c);var o={};t=t||[null,r({}),r([]),r(r)];for(var i=2&n&&e;"object"==typeof i&&!~t.indexOf(i);i=r(i))Object.getOwnPropertyNames(i).forEach((t=>o[t]=()=>e[t]));return o.default=()=>e,a.d(c,o),c},a.d=(e,t)=>{for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;a.g.importScripts&&(e=a.g.location+"");var t=a.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=e})(),(()=>{var e={179:0};a.O.j=t=>0===e[t];var t=(t,r)=>{var n,c,[o,i,l]=r,p=0;if(o.some((t=>0!==e[t]))){for(n in i)a.o(i,n)&&(a.m[n]=i[n]);if(l)var f=l(a)}for(t&&t(r);p<o.length;p++)c=o[p],a.o(e,c)&&e[c]&&e[c][0](),e[c]=0;return a.O(f)},r=self.webpackChunkapp=self.webpackChunkapp||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var o=a.O(void 0,[216],(()=>a(2253)));o=a.O(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,