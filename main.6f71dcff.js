(()=>{"use strict";var e,t,r,n={6011:(e,t,r)=>{var n=r(7294),a=r(3935),o=r(436),c=r(1859),i=r(5974),l=r(2445),u=r(6922);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var s=r(4942),f=r(8152),p=r(7036),d=r(1169);const g=(0,d.ZL)()((function(e){return{root:{height:"100vh",display:"flex",flexDirection:"column"},row:{display:"flex"},col:{margin:5,border:"1px solid black"},dropzone:{background:p.Z[900],height:190,width:190,display:"grid",gap:5,gridAutoRows:"minmax(100px, auto)"},things:{display:"flex",flexWrap:"wrap","& div *":{height:100,width:100,margin:5}},thing:{width:"100%",height:"100%",minHeight:30,minWidth:30,fontWeight:700,backgroundSize:"cover",display:"flex",justifyContent:"center",alignItems:"center"}}}));var m=r(5614),b=(0,d.ZL)()((function(e,t){return{root:{cursor:t.isDragging?"grabbing !important":"grab"}}}));const h=function(e){var t=e.children,r=(e.type,e.id),a=(0,m.c)((function(){return{type:"Draggable",item:{id:r},collect:function(e){return{isDragging:!!e.isDragging()}}}})),o=(0,f.Z)(a,2),c=o[0].isDragging,i=o[1],l=b({isDragging:c}).classes;return n.createElement("div",{className:l.root,ref:i},t)};var v=r(2452),y=(0,d.ZL)()((function(e,t){return{root:{background:t.isOver?"red":"white"}}}));const O=function(e){var t=e.children,r=(e.accept,e.onDrop),a=(0,v.L)((function(){return{accept:"Draggable",collect:function(e){return{isOver:e.isOver(),canDrop:e.canDrop()}},drop:r}})),o=(0,f.Z)(a,2),c=o[0],i=c.canDrop,l=c.isOver,u=o[1],s=y({isOver:l,canDrop:i}).classes;return n.createElement("div",{className:s.root,ref:u,role:"Dustbin"},t)},w=r.p+"d5304110ee0fc7554f93e0536ce4749b.jpg",j=r.p+"ae26d2d95dc2fc6b90e308f32a527736.png",E=r.p+"013a10a0775905d0a7e8229d6cc821ce.jpg",k=r.p+"1d9507260fdc9dd5ba64f6eff63258eb.jpg",D=r.p+"43597aaec6a54db82d82e10d6e8ccf0e.jpg",P=r.p+"c3b647c85f6a922e11681f803ed2afdd.jpg",x=r.p+"7f4778906897fc0157062197ddcf2ace.png",N=r.p+"7fb734cd4ff5acc9289175bca7baff7a.jpg",S=r.p+"0ca3122c54df6b5273f200b265a79e5a.jpg";function Z(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function _(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Z(Object(r),!0).forEach((function(t){(0,s.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Z(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var M=["Lawful","Neutral","Chaotic"],T=["Good","Neutral","Evil"],C=[w,j,E,k,D,P,x,N,S];const W=function(){var e=g().classes,t=n.useState(C),r=(0,f.Z)(t,2),a=r[0],o=r[1],c=n.useState({}),i=(0,f.Z)(c,2),l=i[0],u=i[1];return n.createElement("div",{className:e.root},M.map((function(t){return n.createElement("div",{key:t,className:e.row},T.map((function(r){var a=C.filter((function(e){return l[e]==="".concat(t).concat(r)}));return n.createElement(O,{key:"".concat(t).concat(r),onDrop:function(e,n){return function(e,t){u((function(r){return _(_({},r),{},(0,s.Z)({},t.id,e))})),o((function(e){return e.filter((function(e){return e!==t.id}))}))}("".concat(t).concat(r),e)}},n.createElement("div",null,t," ",r),n.createElement("div",{className:e.col},n.createElement("div",{className:e.dropzone,style:{gridTemplateColumns:"repeat(".concat(Math.ceil(Math.sqrt(a.length)),", 1fr)"),gridTemplateRows:"repeat(".concat(Math.ceil(Math.sqrt(a.length)),", 1fr)")}},a.map((function(t){return n.createElement(h,{id:t,key:t},n.createElement("div",{className:e.thing,style:{backgroundImage:"url(".concat(t,")")}}))})))))})))})),n.createElement("div",{className:e.things},a.map((function(t){return n.createElement(h,{id:t,key:t},n.createElement("div",{className:e.thing,style:{backgroundImage:"url(".concat(t,")")}}))}))))},L=(0,r(2161).Z)({});var I=(0,c.default)({key:"mui",prepend:!0});a.render(n.createElement(o.C,{value:I},n.createElement(i.Z,{theme:L},n.createElement(u.W,{backend:l.PD},n.createElement(W,null)))),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},a={};function o(e){var t=a[e];if(void 0!==t)return t.exports;var r=a[e]={exports:{}};return n[e].call(r.exports,r,r.exports,o),r.exports}o.m=n,e=[],o.O=(t,r,n,a)=>{if(!r){var c=1/0;for(s=0;s<e.length;s++){for(var[r,n,a]=e[s],i=!0,l=0;l<r.length;l++)(!1&a||c>=a)&&Object.keys(o.O).every((e=>o.O[e](r[l])))?r.splice(l--,1):(i=!1,a<c&&(c=a));if(i){e.splice(s--,1);var u=n();void 0!==u&&(t=u)}}return t}a=a||0;for(var s=e.length;s>0&&e[s-1][2]>a;s--)e[s]=e[s-1];e[s]=[r,n,a]},o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},r=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,o.t=function(e,n){if(1&n&&(e=this(e)),8&n)return e;if("object"==typeof e&&e){if(4&n&&e.__esModule)return e;if(16&n&&"function"==typeof e.then)return e}var a=Object.create(null);o.r(a);var c={};t=t||[null,r({}),r([]),r(r)];for(var i=2&n&&e;"object"==typeof i&&!~t.indexOf(i);i=r(i))Object.getOwnPropertyNames(i).forEach((t=>c[t]=()=>e[t]));return c.default=()=>e,o.d(a,c),a},o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;o.g.importScripts&&(e=o.g.location+"");var t=o.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=e})(),(()=>{var e={179:0};o.O.j=t=>0===e[t];var t=(t,r)=>{var n,a,[c,i,l]=r,u=0;if(c.some((t=>0!==e[t]))){for(n in i)o.o(i,n)&&(o.m[n]=i[n]);if(l)var s=l(o)}for(t&&t(r);u<c.length;u++)a=c[u],o.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return o.O(s)},r=self.webpackChunkapp=self.webpackChunkapp||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var c=o.O(void 0,[216],(()=>o(6011)));c=o.O(c)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,